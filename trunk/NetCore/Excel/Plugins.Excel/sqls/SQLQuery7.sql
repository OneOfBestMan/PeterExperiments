 

CREATE TABLE [dbo].[LC_Meta_ImportChiefs](
	[Id] [int] IDENTITY(1,1) NOT NULL,
	[ExcelName] [nvarchar](100) NOT NULL,
	[OperationResult] [nvarchar](500) NULL,
	[InsertNum] [int] NOT NULL,
	[UpdateNum] [int] NOT NULL,
	[Operator] [nvarchar](50) NULL,
	[OperationTime] [datetime] NOT NULL,
	[IsUpdated] [bit] NOT NULL,
 CONSTRAINT [PK_LC_Meta_ImportChiefs] PRIMARY KEY CLUSTERED 
(
	[Id] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]
GO

CREATE TABLE [dbo].[LC_Meta_RAAreas](
	[Id] [int] IDENTITY(1,1) NOT NULL,
	[ProjectName] [nvarchar](255) NULL,
	[District] [nvarchar](255) NULL,
	[District1] [nvarchar](255) NULL,
	[Sector121] [nvarchar](255) NULL,
	[NewSector] [nvarchar](255) NULL,
	[CirclePosition] [nvarchar](255) NULL,
	[CSRAId] [nvarchar](255) NULL,
	[AIRAId] [int] NULL,
	[RAName] [nvarchar](255) NULL,
	[RAAlias] [nvarchar](255) NULL,
	[RAAdress] [nvarchar](255) NULL,
	[ProjectType] [nvarchar](255) NULL,
	[ProjectSubdivision] [nvarchar](255) NULL,
	[RAPropertyType] [nvarchar](255) NULL,
	[RAType] [nvarchar](255) NULL,
	[PropertyForm] [nvarchar](255) NULL,
	[PropertyPeriod] [nvarchar](255) NULL,
	[SampleArea] [nvarchar](255) NULL,
	[BindType] [nvarchar](255) NULL,
	[CommercialBlock] [nvarchar](255) NULL,
	[CBSegmentation] [nvarchar](255) NULL,
	[OfficeBlock] [nvarchar](255) NULL,
	[OBSegmentation] [nvarchar](255) NULL,
	[UsingList] [nvarchar](255) NULL,
	[PropertyLevel] [nvarchar](255) NULL,
	[RALable] [nvarchar](255) NULL,
	[UserPropertyList] [nvarchar](255) NULL,
	[HousingProperty] [nvarchar](255) NULL,
	[BaiduLongitude] [nvarchar](255) NULL,
	[BaiduLatitude] [nvarchar](255) NULL,
	[SubdistrictOffice] [nvarchar](255) NULL,
	[NeighborCommittee] [nvarchar](255) NULL,
	[EastTo] [nvarchar](255) NULL,
	[WestTo] [nvarchar](255) NULL,
	[SouthTo] [nvarchar](255) NULL,
	[NorthTo] [nvarchar](255) NULL,
	[RiversideScenery] [nvarchar](255) NULL,
	[AtmosphericEnvironment] [nvarchar](50) NULL,
	[WaterEnvironment] [nvarchar](50) NULL,
	[SoundEnvironment] [nvarchar](50) NULL,
	[VisualEnvironment] [nvarchar](50) NULL,
	[HygienicEnvironment] [nvarchar](50) NULL,
	[RadiationEnvironment] [nvarchar](50) NULL,
	[PsychologicalEnvironment] [nvarchar](50) NULL,
	[EnvironmentalNotes] [nvarchar](255) NULL,
	[HateFactor] [nvarchar](255) NULL,
	[ResidentialLandscape] [nvarchar](255) NULL,
	[InternalEnvironment] [nvarchar](50) NULL,
	[Developers] [nvarchar](255) NULL,
	[OpeningDate] [datetime] NULL,
	[GroundParkingNum] [float] NULL,
	[UndergroudParkingNum] [float] NULL,
	[TotalParkingNum] [float] NULL,
	[TotalRA] [nvarchar](255) NULL,
	[ParkingRatio] [nvarchar](255) NULL,
	[ParkingAdequacy] [nvarchar](255) NULL,
	[TotalFloorArea] [float] NULL,
	[LandArea] [float] NULL,
	[VolumetricRate] [float] NULL,
	[TotalBaseArea] [float] NULL,
	[BuildingDensity] [nvarchar](255) NULL,
	[GreenArea] [float] NULL,
	[GreenRate] [float] NULL,
	[GreenSpaceRate] [float] NULL,
	[PropertyCompany] [nvarchar](255) NULL,
	[PropertyPayUnit] [nvarchar](255) NULL,
	[PropertyCurrencyUnit] [nvarchar](255) NULL,
	[LowManagementFee] [float] NULL,
	[HighManagementFee] [float] NULL,
	[CulturalArea] [nvarchar](255) NULL,
	[PrimarySchools] [nvarchar](255) NULL,
	[KeyPrimarySchools] [nvarchar](255) NULL,
	[PrimarySchoolDegree] [float] NULL,
	[JuniorSchools] [nvarchar](255) NULL,
	[JuniorSchoolDegree] [nvarchar](255) NULL,
	[MainCompletionYear] [float] NULL,
	[UnitNum] [nvarchar](255) NULL,
	[ElevatorUnitNum] [nvarchar](255) NULL,
	[NoElevatorUnitNum] [nvarchar](255) NULL,
	[RoomNum] [nvarchar](255) NULL,
	[TotalFloorList] [nvarchar](255) NULL,
	[HousingTypeList] [nvarchar](255) NULL,
	[CompletionDateList] [nvarchar](255) NULL,
	[UnitFormList] [nvarchar](255) NULL,
	[ArchitecturalFormList] [nvarchar](255) NULL,
	[HousingStructureList] [nvarchar](255) NULL,
	[LandPriceGrade] [nvarchar](255) NULL,
	[MainArea] [float] NULL,
	[MainAreaSection1] [nvarchar](255) NULL,
	[MainAreaSection2] [nvarchar](255) NULL,
	[MainAreaSection3] [nvarchar](255) NULL,
	[MainAreaSectionBelow90] [nvarchar](255) NULL,
	[MainAreaSection90To140] [nvarchar](255) NULL,
	[MainAreaSectionAbove140] [nvarchar](255) NULL,
	[MainArea1Above] [nvarchar](255) NULL,
	[MainArea1Below] [nvarchar](255) NULL,
	[MainArea2Above] [nvarchar](255) NULL,
	[MainArea2Below] [nvarchar](255) NULL,
	[ProjectIntroduction] [nvarchar](255) NULL,
	[RAPropertyIntroduction] [nvarchar](255) NULL,
	[CAPropertyIntroduction] [nvarchar](255) NULL,
	[OAPropertyIntroduction] [nvarchar](255) NULL,
	[MainUnitTypeList] [nvarchar](255) NULL,
	[RunningState] [nvarchar](255) NULL,
	[NegativeHotspots] [nvarchar](255) NULL,
	[PositiveHotspots] [nvarchar](255) NULL,
	[RANotes] [nvarchar](255) NULL,
	[DataState] [nvarchar](255) NULL,
	[Flag] [int] NULL,
	[Operator] [nvarchar](255) NULL,
	[OperatorType] [int] NULL,
	[OperationTime] [datetime] NULL,
	[CreationTime] [datetime] NOT NULL,
	[RowHash] [nvarchar](200) NULL,
	[ChiefId] [nvarchar](50) NOT NULL,
 CONSTRAINT [PK_LC_Meta_RAAreas] PRIMARY KEY CLUSTERED 
(
	[Id] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]
GO

/****** Object:  UserDefinedTableType [dbo].[LCMetaRAAreaType]    Script Date: 2018/9/17 13:35:01 ******/
CREATE TYPE [dbo].[LCMetaRAAreaType] AS TABLE(
	[Id] [int] NULL,
	[ProjectName] [nvarchar](255) NULL,
	[District] [nvarchar](255) NULL,
	[District1] [nvarchar](255) NULL,
	[Sector121] [nvarchar](255) NULL,
	[NewSector] [nvarchar](255) NULL,
	[CirclePosition] [nvarchar](255) NULL,
	[CSRAId] [nvarchar](255) NULL,
	[AIRAId] [int] NULL,
	[RAName] [nvarchar](255) NULL,
	[RAAlias] [nvarchar](255) NULL,
	[RAAdress] [nvarchar](255) NULL,
	[ProjectType] [nvarchar](255) NULL,
	[ProjectSubdivision] [nvarchar](255) NULL,
	[RAPropertyType] [nvarchar](255) NULL,
	[RAType] [nvarchar](255) NULL,
	[PropertyForm] [nvarchar](255) NULL,
	[PropertyPeriod] [nvarchar](255) NULL,
	[SampleArea] [nvarchar](255) NULL,
	[BindType] [nvarchar](255) NULL,
	[CommercialBlock] [nvarchar](255) NULL,
	[CBSegmentation] [nvarchar](255) NULL,
	[OfficeBlock] [nvarchar](255) NULL,
	[OBSegmentation] [nvarchar](255) NULL,
	[UsingList] [nvarchar](255) NULL,
	[PropertyLevel] [nvarchar](255) NULL,
	[RALable] [nvarchar](255) NULL,
	[UserPropertyList] [nvarchar](255) NULL,
	[HousingProperty] [nvarchar](255) NULL,
	[BaiduLongitude] [nvarchar](255) NULL,
	[BaiduLatitude] [nvarchar](255) NULL,
	[SubdistrictOffice] [nvarchar](255) NULL,
	[NeighborCommittee] [nvarchar](255) NULL,
	[EastTo] [nvarchar](255) NULL,
	[WestTo] [nvarchar](255) NULL,
	[SouthTo] [nvarchar](255) NULL,
	[NorthTo] [nvarchar](255) NULL,
	[RiversideScenery] [nvarchar](255) NULL,
	[AtmosphericEnvironment] [nvarchar](50) NULL,
	[WaterEnvironment] [nvarchar](50) NULL,
	[SoundEnvironment] [nvarchar](50) NULL,
	[VisualEnvironment] [nvarchar](50) NULL,
	[HygienicEnvironment] [nvarchar](50) NULL,
	[RadiationEnvironment] [nvarchar](50) NULL,
	[PsychologicalEnvironment] [nvarchar](50) NULL,
	[EnvironmentalNotes] [nvarchar](255) NULL,
	[HateFactor] [nvarchar](255) NULL,
	[ResidentialLandscape] [nvarchar](255) NULL,
	[InternalEnvironment] [nvarchar](50) NULL,
	[Developers] [nvarchar](255) NULL,
	[OpeningDate] [datetime] NULL,
	[GroundParkingNum] [float] NULL,
	[UndergroudParkingNum] [float] NULL,
	[TotalParkingNum] [float] NULL,
	[TotalRA] [nvarchar](255) NULL,
	[ParkingRatio] [nvarchar](255) NULL,
	[ParkingAdequacy] [nvarchar](255) NULL,
	[TotalFloorArea] [float] NULL,
	[LandArea] [float] NULL,
	[VolumetricRate] [float] NULL,
	[TotalBaseArea] [float] NULL,
	[BuildingDensity] [nvarchar](255) NULL,
	[GreenArea] [float] NULL,
	[GreenRate] [float] NULL,
	[GreenSpaceRate] [float] NULL,
	[PropertyCompany] [nvarchar](255) NULL,
	[PropertyPayUnit] [nvarchar](255) NULL,
	[PropertyCurrencyUnit] [nvarchar](255) NULL,
	[LowManagementFee] [float] NULL,
	[HighManagementFee] [float] NULL,
	[CulturalArea] [nvarchar](255) NULL,
	[PrimarySchools] [nvarchar](255) NULL,
	[KeyPrimarySchools] [nvarchar](255) NULL,
	[PrimarySchoolDegree] [float] NULL,
	[JuniorSchools] [nvarchar](255) NULL,
	[JuniorSchoolDegree] [nvarchar](255) NULL,
	[MainCompletionYear] [float] NULL,
	[UnitNum] [nvarchar](255) NULL,
	[ElevatorUnitNum] [nvarchar](255) NULL,
	[NoElevatorUnitNum] [nvarchar](255) NULL,
	[RoomNum] [nvarchar](255) NULL,
	[TotalFloorList] [nvarchar](255) NULL,
	[HousingTypeList] [nvarchar](255) NULL,
	[CompletionDateList] [nvarchar](255) NULL,
	[UnitFormList] [nvarchar](255) NULL,
	[ArchitecturalFormList] [nvarchar](255) NULL,
	[HousingStructureList] [nvarchar](255) NULL,
	[LandPriceGrade] [nvarchar](255) NULL,
	[MainArea] [float] NULL,
	[MainAreaSection1] [nvarchar](255) NULL,
	[MainAreaSection2] [nvarchar](255) NULL,
	[MainAreaSection3] [nvarchar](255) NULL,
	[MainAreaSectionBelow90] [nvarchar](255) NULL,
	[MainAreaSection90To140] [nvarchar](255) NULL,
	[MainAreaSectionAbove140] [nvarchar](255) NULL,
	[MainArea1Above] [nvarchar](255) NULL,
	[MainArea1Below] [nvarchar](255) NULL,
	[MainArea2Above] [nvarchar](255) NULL,
	[MainArea2Below] [nvarchar](255) NULL,
	[ProjectIntroduction] [nvarchar](255) NULL,
	[RAPropertyIntroduction] [nvarchar](255) NULL,
	[CAPropertyIntroduction] [nvarchar](255) NULL,
	[OAPropertyIntroduction] [nvarchar](255) NULL,
	[MainUnitTypeList] [nvarchar](255) NULL,
	[RunningState] [nvarchar](255) NULL,
	[NegativeHotspots] [nvarchar](255) NULL,
	[PositiveHotspots] [nvarchar](255) NULL,
	[RANotes] [nvarchar](255) NULL,
	[DataState] [nvarchar](255) NULL,
	[Flag] [int] NULL,
	[Operator] [nvarchar](255) NULL,
	[RowHash] [nvarchar](200) NULL,
	[ChiefId] [nvarchar](50) NULL
)
GO

CREATE PROCEDURE [dbo].[usp_LCMetaRAAreaUpdate]
(
      @table LCMetaRAAreaType READONLY
)
AS
BEGIN

SET NOCOUNT ON

      MERGE INTO LC_Meta_RAAreas c1
      USING @table c2
      ON c1.Id=c2.Id
      WHEN MATCHED THEN
      UPDATE SET 
	c1.ProjectName=case when c2.ProjectName is null or c2.ProjectName='' then c1.ProjectName else c2.ProjectName end,
	c1.District=case when c2.District is null or c2.District='' then c1.District else c2.District end,
	c1.District1=case when c2.District1 is null or c2.District1='' then c1.District1 else c2.District1 end,
	c1.Sector121=case when c2.Sector121 is null or c2.Sector121='' then c1.Sector121 else c2.Sector121 end,
	c1.NewSector=case when c2.NewSector is null or c2.NewSector='' then c1.NewSector else c2.NewSector end,
	c1.CirclePosition=case when c2.CirclePosition is null or c2.CirclePosition='' then c1.CirclePosition else c2.CirclePosition end,
	c1.CSRAId=case when c2.CSRAId is null or c2.CSRAId='' then c1.CSRAId else c2.CSRAId end,
	c1.AIRAId=case when c2.AIRAId is null or c2.AIRAId='' then c1.AIRAId else c2.AIRAId end,
	c1.RAName=case when c2.RAName is null or c2.RAName='' then c1.RAName else c2.RAName end,
	c1.RAAlias=case when c2.RAAlias is null or c2.RAAlias='' then c1.RAAlias else c2.RAAlias end,
	c1.RAAdress=case when c2.RAAdress is null or c2.RAAdress='' then c1.RAAdress else c2.RAAdress end,
	c1.ProjectType=case when c2.ProjectType is null or c2.ProjectType='' then c1.ProjectType else c2.ProjectType end,
	c1.ProjectSubdivision=case when c2.ProjectSubdivision is null or c2.ProjectSubdivision='' then c1.ProjectSubdivision else c2.ProjectSubdivision end,
	c1.RAPropertyType=case when c2.RAPropertyType is null or c2.RAPropertyType='' then c1.RAPropertyType else c2.RAPropertyType end,
	c1.RAType=case when c2.RAType is null or c2.RAType='' then c1.RAType else c2.RAType end,
	c1.PropertyForm=case when c2.PropertyForm is null or c2.PropertyForm='' then c1.PropertyForm else c2.PropertyForm end,
	c1.PropertyPeriod=case when c2.PropertyPeriod is null or c2.PropertyPeriod='' then c1.PropertyPeriod else c2.PropertyPeriod end,
	c1.SampleArea=case when c2.SampleArea is null or c2.SampleArea='' then c1.SampleArea else c2.SampleArea end,
	c1.BindType=case when c2.BindType is null or c2.BindType='' then c1.BindType else c2.BindType end,
	c1.CommercialBlock=case when c2.CommercialBlock is null or c2.CommercialBlock='' then c1.CommercialBlock else c2.CommercialBlock end,
	c1.CBSegmentation=case when c2.CBSegmentation is null or c2.CBSegmentation='' then c1.CBSegmentation else c2.CBSegmentation end,
	c1.OfficeBlock=case when c2.OfficeBlock is null or c2.OfficeBlock='' then c1.OfficeBlock else c2.OfficeBlock end,
	c1.OBSegmentation=case when c2.OBSegmentation is null or c2.OBSegmentation='' then c1.OBSegmentation else c2.OBSegmentation end,
	c1.UsingList=case when c2.UsingList is null or c2.UsingList='' then c1.UsingList else c2.UsingList end,
	c1.PropertyLevel=case when c2.PropertyLevel is null or c2.PropertyLevel='' then c1.PropertyLevel else c2.PropertyLevel end,
	c1.RALable=case when c2.RALable is null or c2.RALable='' then c1.RALable else c2.RALable end,
	c1.UserPropertyList=case when c2.UserPropertyList is null or c2.UserPropertyList='' then c1.UserPropertyList else c2.UserPropertyList end,
	c1.HousingProperty=case when c2.HousingProperty is null or c2.HousingProperty='' then c1.HousingProperty else c2.HousingProperty end,
	c1.BaiduLongitude=case when c2.BaiduLongitude is null or c2.BaiduLongitude='' then c1.BaiduLongitude else c2.BaiduLongitude end,
	c1.BaiduLatitude=case when c2.BaiduLatitude is null or c2.BaiduLatitude='' then c1.BaiduLatitude else c2.BaiduLatitude end,
	c1.SubdistrictOffice=case when c2.SubdistrictOffice is null or c2.SubdistrictOffice='' then c1.SubdistrictOffice else c2.SubdistrictOffice end,
	c1.NeighborCommittee=case when c2.NeighborCommittee is null or c2.NeighborCommittee='' then c1.NeighborCommittee else c2.NeighborCommittee end,
	c1.EastTo=case when c2.EastTo is null or c2.EastTo='' then c1.EastTo else c2.EastTo end,
	c1.WestTo=case when c2.WestTo is null or c2.WestTo='' then c1.WestTo else c2.WestTo end,
	c1.SouthTo=case when c2.SouthTo is null or c2.SouthTo='' then c1.SouthTo else c2.SouthTo end,
	c1.NorthTo=case when c2.NorthTo is null or c2.NorthTo='' then c1.NorthTo else c2.NorthTo end,
	c1.RiversideScenery=case when c2.RiversideScenery is null or c2.RiversideScenery='' then c1.RiversideScenery else c2.RiversideScenery end,
	c1.AtmosphericEnvironment=case when c2.AtmosphericEnvironment is null or c2.AtmosphericEnvironment='' then c1.AtmosphericEnvironment else c2.AtmosphericEnvironment end,
	c1.WaterEnvironment=case when c2.WaterEnvironment is null or c2.WaterEnvironment='' then c1.WaterEnvironment else c2.WaterEnvironment end,
	c1.SoundEnvironment=case when c2.SoundEnvironment is null or c2.SoundEnvironment='' then c1.SoundEnvironment else c2.SoundEnvironment end,
	c1.VisualEnvironment=case when c2.VisualEnvironment is null or c2.VisualEnvironment='' then c1.VisualEnvironment else c2.VisualEnvironment end,
	c1.HygienicEnvironment=case when c2.HygienicEnvironment is null or c2.HygienicEnvironment='' then c1.HygienicEnvironment else c2.HygienicEnvironment end,
	c1.RadiationEnvironment=case when c2.RadiationEnvironment is null or c2.RadiationEnvironment='' then c1.RadiationEnvironment else c2.RadiationEnvironment end,
	c1.PsychologicalEnvironment=case when c2.PsychologicalEnvironment is null or c2.PsychologicalEnvironment='' then c1.PsychologicalEnvironment else c2.PsychologicalEnvironment end,
	c1.EnvironmentalNotes=case when c2.EnvironmentalNotes is null or c2.EnvironmentalNotes='' then c1.EnvironmentalNotes else c2.EnvironmentalNotes end,
	c1.HateFactor=case when c2.HateFactor is null or c2.HateFactor='' then c1.HateFactor else c2.HateFactor end,
	c1.ResidentialLandscape=case when c2.ResidentialLandscape is null or c2.ResidentialLandscape='' then c1.ResidentialLandscape else c2.ResidentialLandscape end,
	c1.InternalEnvironment=case when c2.InternalEnvironment is null or c2.InternalEnvironment='' then c1.InternalEnvironment else c2.InternalEnvironment end,
	c1.Developers=case when c2.Developers is null or c2.Developers='' then c1.Developers else c2.Developers end,
	c1.OpeningDate=case when c2.OpeningDate is null or c2.OpeningDate='' then c1.OpeningDate else c2.OpeningDate end,
	c1.GroundParkingNum=case when c2.GroundParkingNum is null or c2.GroundParkingNum='' then c1.GroundParkingNum else c2.GroundParkingNum end,
	c1.UndergroudParkingNum=case when c2.UndergroudParkingNum is null or c2.UndergroudParkingNum='' then c1.UndergroudParkingNum else c2.UndergroudParkingNum end,
	c1.TotalParkingNum=case when c2.TotalParkingNum is null or c2.TotalParkingNum='' then c1.TotalParkingNum else c2.TotalParkingNum end,
	c1.TotalRA=case when c2.TotalRA is null or c2.TotalRA='' then c1.TotalRA else c2.TotalRA end,
	c1.ParkingRatio=case when c2.ParkingRatio is null or c2.ParkingRatio='' then c1.ParkingRatio else c2.ParkingRatio end,
	c1.ParkingAdequacy=case when c2.ParkingAdequacy is null or c2.ParkingAdequacy='' then c1.ParkingAdequacy else c2.ParkingAdequacy end,
	c1.TotalFloorArea=case when c2.TotalFloorArea is null or c2.TotalFloorArea='' then c1.TotalFloorArea else c2.TotalFloorArea end,
	c1.LandArea=case when c2.LandArea is null or c2.LandArea='' then c1.LandArea else c2.LandArea end,
	c1.VolumetricRate=case when c2.VolumetricRate is null or c2.VolumetricRate='' then c1.VolumetricRate else c2.VolumetricRate end,
	c1.TotalBaseArea=case when c2.TotalBaseArea is null or c2.TotalBaseArea='' then c1.TotalBaseArea else c2.TotalBaseArea end,
	c1.BuildingDensity=case when c2.BuildingDensity is null or c2.BuildingDensity='' then c1.BuildingDensity else c2.BuildingDensity end,
	c1.GreenArea=case when c2.GreenArea is null or c2.GreenArea='' then c1.GreenArea else c2.GreenArea end,
	c1.GreenRate=case when c2.GreenRate is null or c2.GreenRate='' then c1.GreenRate else c2.GreenRate end,
	c1.GreenSpaceRate=case when c2.GreenSpaceRate is null or c2.GreenSpaceRate='' then c1.GreenSpaceRate else c2.GreenSpaceRate end,
	c1.PropertyCompany=case when c2.PropertyCompany is null or c2.PropertyCompany='' then c1.PropertyCompany else c2.PropertyCompany end,
	c1.PropertyPayUnit=case when c2.PropertyPayUnit is null or c2.PropertyPayUnit='' then c1.PropertyPayUnit else c2.PropertyPayUnit end,
	c1.PropertyCurrencyUnit=case when c2.PropertyCurrencyUnit is null or c2.PropertyCurrencyUnit='' then c1.PropertyCurrencyUnit else c2.PropertyCurrencyUnit end,
	c1.LowManagementFee=case when c2.LowManagementFee is null or c2.LowManagementFee='' then c1.LowManagementFee else c2.LowManagementFee end,
	c1.HighManagementFee=case when c2.HighManagementFee is null or c2.HighManagementFee='' then c1.HighManagementFee else c2.HighManagementFee end,
	c1.CulturalArea=case when c2.CulturalArea is null or c2.CulturalArea='' then c1.CulturalArea else c2.CulturalArea end,
	c1.PrimarySchools=case when c2.PrimarySchools is null or c2.PrimarySchools='' then c1.PrimarySchools else c2.PrimarySchools end,
	c1.KeyPrimarySchools=case when c2.KeyPrimarySchools is null or c2.KeyPrimarySchools='' then c1.KeyPrimarySchools else c2.KeyPrimarySchools end,
	c1.PrimarySchoolDegree=case when c2.PrimarySchoolDegree is null or c2.PrimarySchoolDegree='' then c1.PrimarySchoolDegree else c2.PrimarySchoolDegree end,
	c1.JuniorSchools=case when c2.JuniorSchools is null or c2.JuniorSchools='' then c1.JuniorSchools else c2.JuniorSchools end,
	c1.JuniorSchoolDegree=case when c2.JuniorSchoolDegree is null or c2.JuniorSchoolDegree='' then c1.JuniorSchoolDegree else c2.JuniorSchoolDegree end,
	c1.MainCompletionYear=case when c2.MainCompletionYear is null or c2.MainCompletionYear='' then c1.MainCompletionYear else c2.MainCompletionYear end,
	c1.UnitNum=case when c2.UnitNum is null or c2.UnitNum='' then c1.UnitNum else c2.UnitNum end,
	c1.ElevatorUnitNum=case when c2.ElevatorUnitNum is null or c2.ElevatorUnitNum='' then c1.ElevatorUnitNum else c2.ElevatorUnitNum end,
	c1.NoElevatorUnitNum=case when c2.NoElevatorUnitNum is null or c2.NoElevatorUnitNum='' then c1.NoElevatorUnitNum else c2.NoElevatorUnitNum end,
	c1.RoomNum=case when c2.RoomNum is null or c2.RoomNum='' then c1.RoomNum else c2.RoomNum end,
	c1.TotalFloorList=case when c2.TotalFloorList is null or c2.TotalFloorList='' then c1.TotalFloorList else c2.TotalFloorList end,
	c1.HousingTypeList=case when c2.HousingTypeList is null or c2.HousingTypeList='' then c1.HousingTypeList else c2.HousingTypeList end,
	c1.CompletionDateList=case when c2.CompletionDateList is null or c2.CompletionDateList='' then c1.CompletionDateList else c2.CompletionDateList end,
	c1.UnitFormList=case when c2.UnitFormList is null or c2.UnitFormList='' then c1.UnitFormList else c2.UnitFormList end,
	c1.ArchitecturalFormList=case when c2.ArchitecturalFormList is null or c2.ArchitecturalFormList='' then c1.ArchitecturalFormList else c2.ArchitecturalFormList end,
	c1.HousingStructureList=case when c2.HousingStructureList is null or c2.HousingStructureList='' then c1.HousingStructureList else c2.HousingStructureList end,
	c1.LandPriceGrade=case when c2.LandPriceGrade is null or c2.LandPriceGrade='' then c1.LandPriceGrade else c2.LandPriceGrade end,
	c1.MainArea=case when c2.MainArea is null or c2.MainArea='' then c1.MainArea else c2.MainArea end,
	c1.MainAreaSection1=case when c2.MainAreaSection1 is null or c2.MainAreaSection1='' then c1.MainAreaSection1 else c2.MainAreaSection1 end,
	c1.MainAreaSection2=case when c2.MainAreaSection2 is null or c2.MainAreaSection2='' then c1.MainAreaSection2 else c2.MainAreaSection2 end,
	c1.MainAreaSection3=case when c2.MainAreaSection3 is null or c2.MainAreaSection3='' then c1.MainAreaSection3 else c2.MainAreaSection3 end,
	c1.MainAreaSectionBelow90=case when c2.MainAreaSectionBelow90 is null or c2.MainAreaSectionBelow90='' then c1.MainAreaSectionBelow90 else c2.MainAreaSectionBelow90 end,
	c1.MainAreaSection90To140=case when c2.MainAreaSection90To140 is null or c2.MainAreaSection90To140='' then c1.MainAreaSection90To140 else c2.MainAreaSection90To140 end,
	c1.MainAreaSectionAbove140=case when c2.MainAreaSectionAbove140 is null or c2.MainAreaSectionAbove140='' then c1.MainAreaSectionAbove140 else c2.MainAreaSectionAbove140 end,
	c1.MainArea1Above=case when c2.MainArea1Above is null or c2.MainArea1Above='' then c1.MainArea1Above else c2.MainArea1Above end,
	c1.MainArea1Below=case when c2.MainArea1Below is null or c2.MainArea1Below='' then c1.MainArea1Below else c2.MainArea1Below end,
	c1.MainArea2Above=case when c2.MainArea2Above is null or c2.MainArea2Above='' then c1.MainArea2Above else c2.MainArea2Above end,
	c1.MainArea2Below=case when c2.MainArea2Below is null or c2.MainArea2Below='' then c1.MainArea2Below else c2.MainArea2Below end,
	c1.ProjectIntroduction=case when c2.ProjectIntroduction is null or c2.ProjectIntroduction='' then c1.ProjectIntroduction else c2.ProjectIntroduction end,
	c1.RAPropertyIntroduction=case when c2.RAPropertyIntroduction is null or c2.RAPropertyIntroduction='' then c1.RAPropertyIntroduction else c2.RAPropertyIntroduction end,
	c1.CAPropertyIntroduction=case when c2.CAPropertyIntroduction is null or c2.CAPropertyIntroduction='' then c1.CAPropertyIntroduction else c2.CAPropertyIntroduction end,
	c1.OAPropertyIntroduction=case when c2.OAPropertyIntroduction is null or c2.OAPropertyIntroduction='' then c1.OAPropertyIntroduction else c2.OAPropertyIntroduction end,
	c1.MainUnitTypeList=case when c2.MainUnitTypeList is null or c2.MainUnitTypeList='' then c1.MainUnitTypeList else c2.MainUnitTypeList end,
	c1.RunningState=case when c2.RunningState is null or c2.RunningState='' then c1.RunningState else c2.RunningState end,
	c1.NegativeHotspots=case when c2.NegativeHotspots is null or c2.NegativeHotspots='' then c1.NegativeHotspots else c2.NegativeHotspots end,
	c1.PositiveHotspots=case when c2.PositiveHotspots is null or c2.PositiveHotspots='' then c1.PositiveHotspots else c2.PositiveHotspots end,
	c1.RANotes=case when c2.RANotes is null or c2.RANotes='' then c1.RANotes else c2.RANotes end,
	c1.DataState=case when c2.DataState is null or c2.DataState='' then c1.DataState else c2.DataState end,
	c1.Flag=case when c2.Flag is null or c2.Flag='' then c1.Flag else c2.Flag end,
	c1.Operator=case when c2.Operator is null or c2.Operator='' then c1.Operator else c2.Operator end,
	c1.RowHash=case when c2.RowHash is null or c2.RowHash='' then c1.RowHash else c2.RowHash end,
	c1.ChiefId=case when c1.ChiefId is null or c1.ChiefId='' then '' else c1.ChiefId+',' end +case when c2.ChiefId is null or c2.ChiefId='' then '' else c2.ChiefId end 
      WHEN NOT MATCHED THEN
      INSERT(
	ProjectName,
	District,
	District1,
	Sector121,
	NewSector,
	CirclePosition,
	CSRAId,
	AIRAId,
	RAName,
	RAAlias,
	RAAdress,
	ProjectType,
	ProjectSubdivision,
	RAPropertyType,
	RAType,
	PropertyForm,
	PropertyPeriod,
	SampleArea,
	BindType,
	CommercialBlock,
	CBSegmentation,
	OfficeBlock,
	OBSegmentation,
	UsingList,
	PropertyLevel,
	RALable,
	UserPropertyList,
	HousingProperty,
	BaiduLongitude,
	BaiduLatitude,
	SubdistrictOffice,
	NeighborCommittee,
	EastTo,
	WestTo,
	SouthTo,
	NorthTo,
	RiversideScenery,
	AtmosphericEnvironment,
	WaterEnvironment,
	SoundEnvironment,
	VisualEnvironment,
	HygienicEnvironment,
	RadiationEnvironment,
	PsychologicalEnvironment,
	EnvironmentalNotes,
	HateFactor,
	ResidentialLandscape,
	InternalEnvironment,
	Developers,
	OpeningDate,
	GroundParkingNum,
	UndergroudParkingNum,
	TotalParkingNum,
	TotalRA,
	ParkingRatio,
	ParkingAdequacy,
	TotalFloorArea,
	LandArea,
	VolumetricRate,
	TotalBaseArea,
	BuildingDensity,
	GreenArea,
	GreenRate,
	GreenSpaceRate,
	PropertyCompany,
	PropertyPayUnit,
	PropertyCurrencyUnit,
	LowManagementFee,
	HighManagementFee,
	CulturalArea,
	PrimarySchools,
	KeyPrimarySchools,
	PrimarySchoolDegree,
	JuniorSchools,
	JuniorSchoolDegree,
	MainCompletionYear,
	UnitNum,
	ElevatorUnitNum,
	NoElevatorUnitNum,
	RoomNum,
	TotalFloorList,
	HousingTypeList,
	CompletionDateList,
	UnitFormList,
	ArchitecturalFormList,
	HousingStructureList,
	LandPriceGrade,
	MainArea,
	MainAreaSection1,
	MainAreaSection2,
	MainAreaSection3,
	MainAreaSectionBelow90,
	MainAreaSection90To140,
	MainAreaSectionAbove140,
	MainArea1Above,
	MainArea1Below,
	MainArea2Above,
	MainArea2Below,
	ProjectIntroduction,
	RAPropertyIntroduction,
	CAPropertyIntroduction,
	OAPropertyIntroduction,
	MainUnitTypeList,
	RunningState,
	NegativeHotspots,
	PositiveHotspots,
	RANotes,
	DataState,
	Flag,
	Operator,
	RowHash,
	ChiefId
     ) VALUES (
	c2.ProjectName,
	c2.District,
	c2.District1,
	c2.Sector121,
	c2.NewSector,
	c2.CirclePosition,
	c2.CSRAId,
	c2.AIRAId,
	c2.RAName,
	c2.RAAlias,
	c2.RAAdress,
	c2.ProjectType,
	c2.ProjectSubdivision,
	c2.RAPropertyType,
	c2.RAType,
	c2.PropertyForm,
	c2.PropertyPeriod,
	c2.SampleArea,
	c2.BindType,
	c2.CommercialBlock,
	c2.CBSegmentation,
	c2.OfficeBlock,
	c2.OBSegmentation,
	c2.UsingList,
	c2.PropertyLevel,
	c2.RALable,
	c2.UserPropertyList,
	c2.HousingProperty,
	c2.BaiduLongitude,
	c2.BaiduLatitude,
	c2.SubdistrictOffice,
	c2.NeighborCommittee,
	c2.EastTo,
	c2.WestTo,
	c2.SouthTo,
	c2.NorthTo,
	c2.RiversideScenery,
	c2.AtmosphericEnvironment,
	c2.WaterEnvironment,
	c2.SoundEnvironment,
	c2.VisualEnvironment,
	c2.HygienicEnvironment,
	c2.RadiationEnvironment,
	c2.PsychologicalEnvironment,
	c2.EnvironmentalNotes,
	c2.HateFactor,
	c2.ResidentialLandscape,
	c2.InternalEnvironment,
	c2.Developers,
	c2.OpeningDate,
	c2.GroundParkingNum,
	c2.UndergroudParkingNum,
	c2.TotalParkingNum,
	c2.TotalRA,
	c2.ParkingRatio,
	c2.ParkingAdequacy,
	c2.TotalFloorArea,
	c2.LandArea,
	c2.VolumetricRate,
	c2.TotalBaseArea,
	c2.BuildingDensity,
	c2.GreenArea,
	c2.GreenRate,
	c2.GreenSpaceRate,
	c2.PropertyCompany,
	c2.PropertyPayUnit,
	c2.PropertyCurrencyUnit,
	c2.LowManagementFee,
	c2.HighManagementFee,
	c2.CulturalArea,
	c2.PrimarySchools,
	c2.KeyPrimarySchools,
	c2.PrimarySchoolDegree,
	c2.JuniorSchools,
	c2.JuniorSchoolDegree,
	c2.MainCompletionYear,
	c2.UnitNum,
	c2.ElevatorUnitNum,
	c2.NoElevatorUnitNum,
	c2.RoomNum,
	c2.TotalFloorList,
	c2.HousingTypeList,
	c2.CompletionDateList,
	c2.UnitFormList,
	c2.ArchitecturalFormList,
	c2.HousingStructureList,
	c2.LandPriceGrade,
	c2.MainArea,
	c2.MainAreaSection1,
	c2.MainAreaSection2,
	c2.MainAreaSection3,
	c2.MainAreaSectionBelow90,
	c2.MainAreaSection90To140,
	c2.MainAreaSectionAbove140,
	c2.MainArea1Above,
	c2.MainArea1Below,
	c2.MainArea2Above,
	c2.MainArea2Below,
	c2.ProjectIntroduction,
	c2.RAPropertyIntroduction,
	c2.CAPropertyIntroduction,
	c2.OAPropertyIntroduction,
	c2.MainUnitTypeList,
	c2.RunningState,
	c2.NegativeHotspots,
	c2.PositiveHotspots,
	c2.RANotes,
	c2.DataState,
	c2.Flag,
	c2.Operator,
	c2.RowHash,
	c2.ChiefId
    );
END
GO




